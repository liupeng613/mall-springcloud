server:
  port: 8004
mybatis:
  mapper-locations: # 所有的mapper映射文件
    - classpath:mapping/*.xml
spring:
  profiles:
    active: jdbc,log
  application:
    name: pocpoint
    sleuth:
      sampler:
        probability: 1 #sleth采样 0.1表示采样10% 1表示全部采样
    zipkin:
      base-url: http://localhost:9411/  #整合zipkin
      service:
        name: pocpoint  #zipkin中显示的名称
      sender:
        type: web
  datasource:
    url: jdbc:mysql://xdevpdb.xiaogj.com:3306/pocpoint?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=UTF-8 # 数据库连接地址
    username: pocpoint # 数据库用户名
    password: '{cipher}5d51c8d7a9e6ffdc2fbcb4f5a6ead28001b6026d76db3e809f24cddccce5fbc7'  # 数据库连接密码
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 8
      min-idle: 1
      max-active: 20
      max-wait: 60000
      time-between-eviction-runsMillis: 60000
      min-evictable-idle-timeMillis: 300000
      validation-query: select 'x' FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      use-global-data-source-stat: true
      # 状态监控
      filter:
        stat:
        enabled: true
        db-type: mysql
        log-slow-sql: true
        slow-sql-millis: 2000
        # 监控过滤器
      web-stat-filter:
        enabled: true
        exclusions:
          - "*.js"
          - "*.gif"
          - "*.jpg"
          - "*.png"
          - "*.css"
          - "*.ico"
          - "/druid/*"
        # druid 监控页面
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
        login-username: root
        login-password: root
  mvc:
    throw-exception-if-no-handler-found: true
  cloud:
    bus:
      trace:
        enabled: true #打开springbus
    stream:
      rabbit:
        bindings:
          xgj-point-topic:
            consumer:
              exchangeDurable: true
              exclusive: false
              anonymousGroupPrefix: pocpoint.
              exchangeAutoDelete: false
              durableSubscription: true
              acknowledge-mode: MANUAL
      binders:
        default:
          type: rabbit
          environment: #配置rabbimq连接环境
            spring:
              rabbitmq:
                host: app059.xiaogj.com
                port: 5672
                username: admin
                password: '{cipher}5d51c8d7a9e6ffdc2fbcb4f5a6ead28001b6026d76db3e809f24cddccce5fbc7'
                virtual-host: xiaogj_rabbitmq_host
      bindings:
        xgj-point-topic:
          destination: xgj-point-topic  #exchange名称，交换模式默认是topic
          content-type: application/json
          group: pocpoint
  rabbitmq: #spring bus mq
    host: app059.xiaogj.com
    port: 5672
    username: admin
    password: '{cipher}5d51c8d7a9e6ffdc2fbcb4f5a6ead28001b6026d76db3e809f24cddccce5fbc7'
    virtual-host: xiaogj_rabbitmq_host
  cache:
    type: REDIS
    redis:
      timeToLive: 200000 #缓存超时时间ms
      cache-null-values: true #是否缓存空值
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: app059.xiaogj.com
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: '{cipher}5d51c8d7a9e6ffdc2fbcb4f5a6ead28001b6026d76db3e809f24cddccce5fbc7'
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 1
        # 连接超时时间（毫秒）
        timeout: 0
eureka:
  client:
    register-with-eureka: true #是否注册要eureka
    service-url:
      defaultZone: http://xiaogj:xiaogj@127.0.0.1:8761/eureka #erueka地址
  instance:
    instance-id: pocpoint  #eureka显示的实例名称
    prefer-ip-address: true #ip注册
logging:
  config: classpath:logback.xml #log日志配置
  path: /data/logs/${spring.application.name} #日志存放文件夹
  level:
    root: INFO
    org.springframework.web.servlet.DispatcherServlet: DEBUG
    org.springframework.cloud.sleuth: DEBUG

#积分规则
point:
  rules:
    StudentLogin: 40  #学员登陆成功加10分
    TeacherLogin: 40  #老师登陆成功加10分
    StudentAdd: 10   #老师新增学员成功加5分
    StudentDel: -15   #老师删除学员减5分